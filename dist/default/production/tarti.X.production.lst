

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jan 27 16:53:45 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F628A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  008C                     	;# 
    83  008E                     	;# 
    84  0092                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009F                     	;# 
    92                           
    93                           	psect	idataCOMMON
    94  016C                     __pidataCOMMON:	
    95                           
    96                           ;initializer for _counter
    97  016C  3418               	retlw	24
    98  016D  3400               	retlw	0
    99  001A                     _RCREG	set	26
   100  000C                     _PIR1bits	set	12
   101  0018                     _RCSTAbits	set	24
   102  000B                     _INTCONbits	set	11
   103  0019                     _TXREG	set	25
   104  0005                     _PORTAbits	set	5
   105  001F                     _CMCON	set	31
   106  0085                     _TRISAbits	set	133
   107  0099                     _SPBRG	set	153
   108  008C                     _PIE1bits	set	140
   109  0086                     _TRISBbits	set	134
   110  0081                     _OPTION_REGbits	set	129
   111  0098                     _TXSTAbits	set	152
   112  0086                     _TRISB	set	134
   113                           
   114                           ; #config settings
   115  0000                     
   116                           	psect	cinit
   117  0011                     start_initialization:	
   118  0011                     __initialization:	
   119                           
   120                           ; Initialize objects allocated to COMMON
   121  0011  216C               	fcall	__pidataCOMMON	;fetch initializer
   122  0012  00F6               	movwf	__pdataCOMMON& (0+127)
   123  0013  216D               	fcall	__pidataCOMMON+1	;fetch initializer
   124  0014  00F7               	movwf	(__pdataCOMMON+1)& (0+127)
   125                           
   126                           ; Clear objects allocated to BANK1
   127  0015  1383               	bcf	3,7	;select IRP bank0
   128  0016  30A0               	movlw	low __pbssBANK1
   129  0017  0084               	movwf	4
   130  0018  30D0               	movlw	low (__pbssBANK1+48)
   131  0019  2164               	fcall	clear_ram0
   132                           
   133                           ; Clear objects allocated to BANK0
   134  001A  3020               	movlw	low __pbssBANK0
   135  001B  0084               	movwf	4
   136  001C  3040               	movlw	low (__pbssBANK0+32)
   137  001D  2164               	fcall	clear_ram0
   138  001E                     end_of_initialization:	
   139                           ;End of C runtime variable initialization code
   140                           
   141  001E                     __end_of__initialization:	
   142  001E  0183               	clrf	3
   143  001F  288C               	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	dataCOMMON
   146  0076                     __pdataCOMMON:	
   147  0076                     _counter:	
   148  0076                     	ds	2
   149                           
   150                           	psect	bssBANK0
   151  0020                     __pbssBANK0:	
   152  0020                     _tarti:	
   153  0020                     	ds	28
   154  003C                     _timetick:	
   155  003C                     	ds	4
   156                           
   157                           	psect	bssBANK1
   158  00A0                     __pbssBANK1:	
   159  00A0                     _tarti_data:	
   160  00A0                     	ds	48
   161                           
   162                           	psect	clrtext
   163  0164                     clear_ram0:	
   164                           ;	Called with FSR containing the base address, and
   165                           ;	W with the last address+1
   166                           
   167  0164  0064               	clrwdt	;clear the watchdog before getting into this loop
   168  0165                     clrloop0:	
   169  0165  0180               	clrf	0	;clear RAM location pointed to by FSR
   170  0166  0A84               	incf	4,f	;increment pointer
   171  0167  0604               	xorwf	4,w	;XOR with final address
   172  0168  1903               	btfsc	3,2	;have we reached the end yet?
   173  0169  3400               	retlw	0	;all done for this memory range, return
   174  016A  0604               	xorwf	4,w	;XOR again to restore value
   175  016B  2965               	goto	clrloop0	;do the next byte
   176                           
   177                           	psect	cstackCOMMON
   178  0070                     __pcstackCOMMON:	
   179  0070                     ?_T0_init:	
   180  0070                     ?_serial_init:	
   181                           ; 1 bytes @ 0x0
   182                           
   183  0070                     ?_tarti_init:	
   184                           ; 1 bytes @ 0x0
   185                           
   186  0070                     ?_Read_tarti:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0070                     ?_main:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0070                     ?_kes:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0070                     ??_kes:	
   196                           ; 1 bytes @ 0x0
   197                           
   198                           
   199                           ; 1 bytes @ 0x0
   200  0070                     	ds	5
   201  0075                     ??_T0_init:	
   202  0075                     ??_serial_init:	
   203                           ; 1 bytes @ 0x5
   204                           
   205  0075                     ??_tarti_init:	
   206                           ; 1 bytes @ 0x5
   207                           
   208  0075                     ??_main:	
   209                           ; 1 bytes @ 0x5
   210                           
   211                           
   212                           ; 1 bytes @ 0x5
   213  0075                     	ds	1
   214                           
   215                           	psect	cstackBANK0
   216  0040                     __pcstackBANK0:	
   217  0040                     ??_Read_tarti:	
   218                           
   219                           ; 1 bytes @ 0x0
   220  0040                     	ds	4
   221  0044                     Read_tarti@kl:	
   222                           
   223                           ; 2 bytes @ 0x4
   224  0044                     	ds	2
   225  0046                     Read_tarti@i:	
   226                           
   227                           ; 2 bytes @ 0x6
   228  0046                     	ds	2
   229  0048                     main@k:	
   230                           
   231                           ; 2 bytes @ 0x8
   232  0048                     	ds	2
   233                           
   234                           	psect	maintext
   235  008C                     __pmaintext:	
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 37 in file "tarti.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;  k               2    8[BANK0 ] int 
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : B00/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   255 ;;      Params:         0       0       0       0
   256 ;;      Locals:         0       2       0       0
   257 ;;      Temps:          1       0       0       0
   258 ;;      Totals:         1       2       0       0
   259 ;;Total ram usage:        3 bytes
   260 ;; Hardware stack levels required when called:    2
   261 ;; This function calls:
   262 ;;		_Read_tarti
   263 ;;		_T0_init
   264 ;;		_serial_init
   265 ;;		_tarti_init
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           
   272                           ;psect for function _main
   273  008C                     _main:	
   274                           
   275                           ;tarti.c: 38: CMCON=0x07;
   276                           
   277                           ;incstack = 0
   278                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   279  008C  3007               	movlw	7
   280  008D  1283               	bcf	3,5	;RP0=0, select bank0
   281  008E  1303               	bcf	3,6	;RP1=0, select bank0
   282  008F  009F               	movwf	31	;volatile
   283                           
   284                           ;tarti.c: 39: TRISB=0b00000110;
   285  0090  3006               	movlw	6
   286  0091  1683               	bsf	3,5	;RP0=1, select bank1
   287  0092  1303               	bcf	3,6	;RP1=0, select bank1
   288  0093  0086               	movwf	6	;volatile
   289                           
   290                           ;tarti.c: 41: T0_init();
   291  0094  214F               	fcall	_T0_init
   292                           
   293                           ;tarti.c: 42: serial_init();
   294  0095  2139               	fcall	_serial_init
   295                           
   296                           ;tarti.c: 43: tarti_init();
   297  0096  215B               	fcall	_tarti_init
   298                           
   299                           ;tarti.c: 45: tarti.wr_index=0;
   300  0097  1283               	bcf	3,5	;RP0=0, select bank0
   301  0098  1303               	bcf	3,6	;RP1=0, select bank0
   302  0099  01B8               	clrf	_tarti+24
   303  009A  01B9               	clrf	_tarti+25
   304                           
   305                           ;tarti.c: 46: tarti.rd_index=0;
   306  009B  01BA               	clrf	_tarti+26
   307  009C  01BB               	clrf	_tarti+27
   308                           
   309                           ;tarti.c: 47: PORTAbits.RA0=0;
   310  009D  1005               	bcf	5,0	;volatile
   311  009E                     l50:	
   312                           ;tarti.c: 78: while(PORTAbits.RA3==1);
   313                           
   314                           ;tarti.c: 49: while (1) {
   315                           
   316  009E  1985               	btfsc	5,3	;volatile
   317  009F  289E               	goto	l50
   318                           
   319                           ;tarti.c: 79: PORTAbits.RA4=1;
   320  00A0  1605               	bsf	5,4	;volatile
   321                           
   322                           ;tarti.c: 80: PORTAbits.RA4=0;
   323  00A1  1205               	bcf	5,4	;volatile
   324                           
   325                           ;tarti.c: 82: Read_tarti();
   326  00A2  2020               	fcall	_Read_tarti
   327                           
   328                           ;tarti.c: 83: for(int k=0;k<24;k++){
   329  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   330  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   331  00A5  01C8               	clrf	main@k
   332  00A6  01C9               	clrf	main@k+1
   333  00A7  0849               	movf	main@k+1,w
   334  00A8  3A80               	xorlw	128
   335  00A9  00FF               	movwf	127
   336  00AA  3080               	movlw	128
   337  00AB  027F               	subwf	127,w
   338  00AC  1D03               	skipz
   339  00AD  28B0               	goto	u425
   340  00AE  3018               	movlw	24
   341  00AF  0248               	subwf	main@k,w
   342  00B0                     u425:	
   343  00B0  1803               	btfsc	3,0
   344  00B1  28D2               	goto	l58
   345  00B2                     l55:	
   346                           ;tarti.c: 84: while(!TXSTAbits.TRMT);
   347                           
   348  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   349  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   350  00B4  1C98               	btfss	24,1	;volatile
   351  00B5  28B2               	goto	l55
   352                           
   353                           ;tarti.c: 85: TXREG=(tarti_data[k]+'0');
   354  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   355  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   356  00B8  0848               	movf	main@k,w
   357  00B9  00F5               	movwf	??_main
   358  00BA  0775               	addwf	??_main,w
   359  00BB  3EA0               	addlw	(low (_tarti_data| 0))& (0+255)
   360  00BC  0084               	movwf	4
   361  00BD  1383               	bcf	3,7	;select IRP bank1
   362  00BE  0800               	movf	0,w
   363  00BF  3E30               	addlw	48
   364  00C0  0099               	movwf	25	;volatile
   365  00C1  3001               	movlw	1
   366  00C2  07C8               	addwf	main@k,f
   367  00C3  1803               	skipnc
   368  00C4  0AC9               	incf	main@k+1,f
   369  00C5  3000               	movlw	0
   370  00C6  07C9               	addwf	main@k+1,f
   371  00C7  0849               	movf	main@k+1,w
   372  00C8  3A80               	xorlw	128
   373  00C9  00FF               	movwf	127
   374  00CA  3080               	movlw	128
   375  00CB  027F               	subwf	127,w
   376  00CC  1D03               	skipz
   377  00CD  28D0               	goto	u445
   378  00CE  3018               	movlw	24
   379  00CF  0248               	subwf	main@k,w
   380  00D0                     u445:	
   381  00D0  1C03               	skipc
   382  00D1  28B2               	goto	l55
   383  00D2                     l58:	
   384                           ;tarti.c: 86: }
   385                           ;tarti.c: 87: while(!TXSTAbits.TRMT);
   386                           
   387  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   388  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   389  00D4  1C98               	btfss	24,1	;volatile
   390  00D5  28D2               	goto	l58
   391                           
   392                           ;tarti.c: 88: TXREG='\r';
   393  00D6  300D               	movlw	13
   394  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   395  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   396  00D9  0099               	movwf	25	;volatile
   397  00DA                     l61:	
   398                           ;tarti.c: 89: while(!TXSTAbits.TRMT);
   399                           
   400  00DA  1683               	bsf	3,5	;RP0=1, select bank1
   401  00DB  1303               	bcf	3,6	;RP1=0, select bank1
   402  00DC  1C98               	btfss	24,1	;volatile
   403  00DD  28DA               	goto	l61
   404                           
   405                           ;tarti.c: 90: TXREG='\n';
   406  00DE  300A               	movlw	10
   407  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   408  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   409  00E1  0099               	movwf	25	;volatile
   410  00E2  289E               	goto	l50
   411  00E3                     __end_of_main:	
   412                           ;tarti.c: 94: }
   413                           ;tarti.c: 96: return;
   414                           
   415                           
   416                           	psect	text1
   417  015B                     __ptext1:	
   418 ;; *************** function _tarti_init *****************
   419 ;; Defined at:
   420 ;;		line 154 in file "tarti.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		None
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   434 ;;      Params:         0       0       0       0
   435 ;;      Locals:         0       0       0       0
   436 ;;      Temps:          0       0       0       0
   437 ;;      Totals:         0       0       0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; Hardware stack levels required when called:    1
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _tarti_init
   450  015B                     _tarti_init:	
   451                           
   452                           ;tarti.c: 156: TRISAbits.TRISA0=0;
   453                           
   454                           ;incstack = 0
   455                           ; Regs used in _tarti_init: []
   456  015B  1683               	bsf	3,5	;RP0=1, select bank1
   457  015C  1303               	bcf	3,6	;RP1=0, select bank1
   458  015D  1005               	bcf	5,0	;volatile
   459                           
   460                           ;tarti.c: 157: TRISAbits.TRISA3=1;
   461  015E  1585               	bsf	5,3	;volatile
   462                           
   463                           ;tarti.c: 158: TRISAbits.TRISA4=0;
   464  015F  1205               	bcf	5,4	;volatile
   465                           
   466                           ;tarti.c: 159: PORTAbits.RA0=0;
   467  0160  1283               	bcf	3,5	;RP0=0, select bank0
   468  0161  1303               	bcf	3,6	;RP1=0, select bank0
   469  0162  1005               	bcf	5,0	;volatile
   470  0163  0008               	return
   471  0164                     __end_of_tarti_init:	
   472                           
   473                           	psect	text2
   474  0139                     __ptext2:	
   475 ;; *************** function _serial_init *****************
   476 ;; Defined at:
   477 ;;		line 113 in file "tarti.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   491 ;;      Params:         0       0       0       0
   492 ;;      Locals:         0       0       0       0
   493 ;;      Temps:          0       0       0       0
   494 ;;      Totals:         0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    1
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _serial_init
   507  0139                     _serial_init:	
   508                           
   509                           ;tarti.c: 114: TXSTAbits.TX9=0;
   510                           
   511                           ;incstack = 0
   512                           ; Regs used in _serial_init: [wreg]
   513  0139  1683               	bsf	3,5	;RP0=1, select bank1
   514  013A  1303               	bcf	3,6	;RP1=0, select bank1
   515  013B  1318               	bcf	24,6	;volatile
   516                           
   517                           ;tarti.c: 115: TXSTAbits.TXEN=1;
   518  013C  1698               	bsf	24,5	;volatile
   519                           
   520                           ;tarti.c: 116: TXSTAbits.SYNC=0;
   521  013D  1218               	bcf	24,4	;volatile
   522                           
   523                           ;tarti.c: 117: TXSTAbits.BRGH=1;
   524  013E  1518               	bsf	24,2	;volatile
   525                           
   526                           ;tarti.c: 119: RCSTAbits.SPEN=1;
   527  013F  1283               	bcf	3,5	;RP0=0, select bank0
   528  0140  1303               	bcf	3,6	;RP1=0, select bank0
   529  0141  1798               	bsf	24,7	;volatile
   530                           
   531                           ;tarti.c: 120: RCSTAbits.RX9=0;
   532  0142  1318               	bcf	24,6	;volatile
   533                           
   534                           ;tarti.c: 121: RCSTAbits.CREN=1;
   535  0143  1618               	bsf	24,4	;volatile
   536                           
   537                           ;tarti.c: 123: TRISBbits.TRISB1=1;
   538  0144  1683               	bsf	3,5	;RP0=1, select bank1
   539  0145  1303               	bcf	3,6	;RP1=0, select bank1
   540  0146  1486               	bsf	6,1	;volatile
   541                           
   542                           ;tarti.c: 124: TRISBbits.TRISB2=1;
   543  0147  1506               	bsf	6,2	;volatile
   544                           
   545                           ;tarti.c: 126: PIE1bits.RCIE=1;
   546  0148  168C               	bsf	12,5	;volatile
   547                           
   548                           ;tarti.c: 127: SPBRG=129;
   549  0149  3081               	movlw	129
   550  014A  0099               	movwf	25	;volatile
   551                           
   552                           ;tarti.c: 129: PIR1bits.RCIF=0;
   553  014B  1283               	bcf	3,5	;RP0=0, select bank0
   554  014C  1303               	bcf	3,6	;RP1=0, select bank0
   555  014D  128C               	bcf	12,5	;volatile
   556  014E  0008               	return
   557  014F                     __end_of_serial_init:	
   558                           
   559                           	psect	text3
   560  014F                     __ptext3:	
   561 ;; *************** function _T0_init *****************
   562 ;; Defined at:
   563 ;;		line 99 in file "tarti.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		None
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   577 ;;      Params:         0       0       0       0
   578 ;;      Locals:         0       0       0       0
   579 ;;      Temps:          0       0       0       0
   580 ;;      Totals:         0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    1
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_main
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           
   592                           ;psect for function _T0_init
   593  014F                     _T0_init:	
   594                           
   595                           ;tarti.c: 100: INTCONbits.GIE=1;
   596                           
   597                           ;incstack = 0
   598                           ; Regs used in _T0_init: []
   599  014F  178B               	bsf	11,7	;volatile
   600                           
   601                           ;tarti.c: 101: INTCONbits.T0IE=1;
   602  0150  168B               	bsf	11,5	;volatile
   603                           
   604                           ;tarti.c: 102: INTCONbits.T0IF=0;
   605  0151  110B               	bcf	11,2	;volatile
   606                           
   607                           ;tarti.c: 104: OPTION_REGbits.T0CS=0;
   608  0152  1683               	bsf	3,5	;RP0=1, select bank1
   609  0153  1303               	bcf	3,6	;RP1=0, select bank1
   610  0154  1281               	bcf	1,5	;volatile
   611                           
   612                           ;tarti.c: 105: OPTION_REGbits.T0SE=0;
   613  0155  1201               	bcf	1,4	;volatile
   614                           
   615                           ;tarti.c: 106: OPTION_REGbits.PSA=0;
   616  0156  1181               	bcf	1,3	;volatile
   617                           
   618                           ;tarti.c: 107: OPTION_REGbits.PS0=0;
   619  0157  1001               	bcf	1,0	;volatile
   620                           
   621                           ;tarti.c: 108: OPTION_REGbits.PS1=0;
   622  0158  1081               	bcf	1,1	;volatile
   623                           
   624                           ;tarti.c: 109: OPTION_REGbits.PS2=0;
   625  0159  1101               	bcf	1,2	;volatile
   626  015A  0008               	return
   627  015B                     __end_of_T0_init:	
   628                           
   629                           	psect	text4
   630  0020                     __ptext4:	
   631 ;; *************** function _Read_tarti *****************
   632 ;; Defined at:
   633 ;;		line 163 in file "tarti.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  kl              2    4[BANK0 ] int 
   638 ;;  i               2    6[BANK0 ] int 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   648 ;;      Params:         0       0       0       0
   649 ;;      Locals:         0       4       0       0
   650 ;;      Temps:          0       4       0       0
   651 ;;      Totals:         0       8       0       0
   652 ;;Total ram usage:        8 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; Hardware stack levels required when called:    1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_main
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           
   663                           ;psect for function _Read_tarti
   664  0020                     _Read_tarti:	
   665                           
   666                           ;tarti.c: 165: int i;
   667                           ;tarti.c: 167: PORTAbits.RA0=0;
   668                           
   669                           ;incstack = 0
   670                           ; Regs used in _Read_tarti: [wreg-fsr0h+status,2+status,0+btemp+1]
   671  0020  1283               	bcf	3,5	;RP0=0, select bank0
   672  0021  1303               	bcf	3,6	;RP1=0, select bank0
   673  0022  1005               	bcf	5,0	;volatile
   674  0023                     l87:	
   675                           ;tarti.c: 168: while(PORTAbits.RA3==1);
   676                           
   677  0023  1985               	btfsc	5,3	;volatile
   678  0024  2823               	goto	l87
   679                           
   680                           ;tarti.c: 170: for(int kl=0;kl<25;kl++){
   681  0025  01C4               	clrf	Read_tarti@kl
   682  0026  01C5               	clrf	Read_tarti@kl+1
   683  0027  0845               	movf	Read_tarti@kl+1,w
   684  0028  3A80               	xorlw	128
   685  0029  00FF               	movwf	127
   686  002A  3080               	movlw	128
   687  002B  027F               	subwf	127,w
   688  002C  1D03               	skipz
   689  002D  2830               	goto	u365
   690  002E  3019               	movlw	25
   691  002F  0244               	subwf	Read_tarti@kl,w
   692  0030                     u365:	
   693  0030  1803               	btfsc	3,0
   694  0031  2847               	goto	l92
   695  0032                     l90:	
   696                           
   697                           ;tarti.c: 171: PORTAbits.RA0=1;
   698  0032  1283               	bcf	3,5	;RP0=0, select bank0
   699  0033  1303               	bcf	3,6	;RP1=0, select bank0
   700  0034  1405               	bsf	5,0	;volatile
   701                           
   702                           ;tarti.c: 172: PORTAbits.RA0=0;
   703  0035  1005               	bcf	5,0	;volatile
   704  0036  3001               	movlw	1
   705  0037  07C4               	addwf	Read_tarti@kl,f
   706  0038  1803               	skipnc
   707  0039  0AC5               	incf	Read_tarti@kl+1,f
   708  003A  3000               	movlw	0
   709  003B  07C5               	addwf	Read_tarti@kl+1,f
   710  003C  0845               	movf	Read_tarti@kl+1,w
   711  003D  3A80               	xorlw	128
   712  003E  00FF               	movwf	127
   713  003F  3080               	movlw	128
   714  0040  027F               	subwf	127,w
   715  0041  1D03               	skipz
   716  0042  2845               	goto	u375
   717  0043  3019               	movlw	25
   718  0044  0244               	subwf	Read_tarti@kl,w
   719  0045                     u375:	
   720  0045  1C03               	skipc
   721  0046  2832               	goto	l90
   722  0047                     l92:	
   723                           ;tarti.c: 173: }
   724                           ;tarti.c: 177: while(PORTAbits.RA3==1);
   725                           
   726  0047  1283               	bcf	3,5	;RP0=0, select bank0
   727  0048  1303               	bcf	3,6	;RP1=0, select bank0
   728  0049  1985               	btfsc	5,3	;volatile
   729  004A  2847               	goto	l92
   730                           
   731                           ;tarti.c: 178: for(i=0;i<24;i++){
   732  004B  01C6               	clrf	Read_tarti@i
   733  004C  01C7               	clrf	Read_tarti@i+1
   734  004D  0847               	movf	Read_tarti@i+1,w
   735  004E  3A80               	xorlw	128
   736  004F  00FF               	movwf	127
   737  0050  3080               	movlw	128
   738  0051  027F               	subwf	127,w
   739  0052  1D03               	skipz
   740  0053  2856               	goto	u395
   741  0054  3018               	movlw	24
   742  0055  0246               	subwf	Read_tarti@i,w
   743  0056                     u395:	
   744  0056  1803               	btfsc	3,0
   745  0057  287F               	goto	l96
   746  0058                     l95:	
   747                           
   748                           ;tarti.c: 179: PORTAbits.RA0=1;
   749  0058  1283               	bcf	3,5	;RP0=0, select bank0
   750  0059  1303               	bcf	3,6	;RP1=0, select bank0
   751  005A  1405               	bsf	5,0	;volatile
   752                           
   753                           ;tarti.c: 181: tarti_data[i]=PORTAbits.RA3;
   754  005B  0C05               	rrf	5,w	;volatile
   755  005C  00C0               	movwf	??_Read_tarti
   756  005D  0CC0               	rrf	??_Read_tarti,f
   757  005E  0C40               	rrf	??_Read_tarti,w
   758  005F  3901               	andlw	1
   759  0060  00C1               	movwf	??_Read_tarti+1
   760  0061  01C2               	clrf	??_Read_tarti+2
   761  0062  0846               	movf	Read_tarti@i,w
   762  0063  00C3               	movwf	??_Read_tarti+3
   763  0064  0743               	addwf	??_Read_tarti+3,w
   764  0065  3EA0               	addlw	(low (_tarti_data| 0))& (0+255)
   765  0066  0084               	movwf	4
   766  0067  0841               	movf	??_Read_tarti+1,w
   767  0068  1383               	bcf	3,7	;select IRP bank1
   768  0069  0080               	movwf	0
   769  006A  0A84               	incf	4,f
   770  006B  0842               	movf	??_Read_tarti+2,w
   771  006C  0080               	movwf	0
   772                           
   773                           ;tarti.c: 182: PORTAbits.RA0=0;
   774  006D  1005               	bcf	5,0	;volatile
   775  006E  3001               	movlw	1
   776  006F  07C6               	addwf	Read_tarti@i,f
   777  0070  1803               	skipnc
   778  0071  0AC7               	incf	Read_tarti@i+1,f
   779  0072  3000               	movlw	0
   780  0073  07C7               	addwf	Read_tarti@i+1,f
   781  0074  0847               	movf	Read_tarti@i+1,w
   782  0075  3A80               	xorlw	128
   783  0076  00FF               	movwf	127
   784  0077  3080               	movlw	128
   785  0078  027F               	subwf	127,w
   786  0079  1D03               	skipz
   787  007A  287D               	goto	u405
   788  007B  3018               	movlw	24
   789  007C  0246               	subwf	Read_tarti@i,w
   790  007D                     u405:	
   791  007D  1C03               	skipc
   792  007E  2858               	goto	l95
   793  007F                     l96:	
   794                           
   795                           ;tarti.c: 185: }
   796                           ;tarti.c: 187: PORTAbits.RA0=1;
   797  007F  1283               	bcf	3,5	;RP0=0, select bank0
   798  0080  1303               	bcf	3,6	;RP1=0, select bank0
   799  0081  1405               	bsf	5,0	;volatile
   800                           
   801                           ;tarti.c: 188: tarti_data[23] ^=1;
   802  0082  3001               	movlw	1
   803  0083  1683               	bsf	3,5	;RP0=1, select bank1
   804  0084  1303               	bcf	3,6	;RP1=0, select bank1
   805  0085  06CE               	xorwf	(_tarti_data^(0+128)+46),f
   806  0086  3000               	movlw	0
   807  0087  06CF               	xorwf	((_tarti_data+1)^(0+128)+46),f
   808                           
   809                           ;tarti.c: 189: PORTAbits.RA0=0;
   810  0088  1283               	bcf	3,5	;RP0=0, select bank0
   811  0089  1303               	bcf	3,6	;RP1=0, select bank0
   812  008A  1005               	bcf	5,0	;volatile
   813  008B  0008               	return
   814  008C                     __end_of_Read_tarti:	
   815                           
   816                           	psect	text5
   817  00E3                     __ptext5:	
   818 ;; *************** function _kes *****************
   819 ;; Defined at:
   820 ;;		line 132 in file "tarti.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   834 ;;      Params:         0       0       0       0
   835 ;;      Locals:         0       0       0       0
   836 ;;      Temps:          5       0       0       0
   837 ;;      Totals:         5       0       0       0
   838 ;;Total ram usage:        5 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		Interrupt level 1
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           
   848                           ;psect for function _kes
   849  00E3                     _kes:	
   850                           
   851                           ;tarti.c: 133: if(INTCONbits.T0IF && INTCONbits.T0IE){
   852  00E3  190B               	btfsc	11,2	;volatile
   853  00E4  1E8B               	btfss	11,5	;volatile
   854  00E5  28F5               	goto	i1l727
   855                           
   856                           ;tarti.c: 134: timetick++;
   857  00E6  3001               	movlw	1
   858  00E7  07BC               	addwf	_timetick,f
   859  00E8  3000               	movlw	0
   860  00E9  1803               	skipnc
   861  00EA  3001               	movlw	1
   862  00EB  07BD               	addwf	_timetick+1,f
   863  00EC  3000               	movlw	0
   864  00ED  1803               	skipnc
   865  00EE  3001               	movlw	1
   866  00EF  07BE               	addwf	_timetick+2,f
   867  00F0  3000               	movlw	0
   868  00F1  1803               	skipnc
   869  00F2  3001               	movlw	1
   870  00F3  07BF               	addwf	_timetick+3,f
   871                           
   872                           ;tarti.c: 135: INTCONbits.T0IF=0;
   873  00F4  110B               	bcf	11,2	;volatile
   874  00F5                     i1l727:	
   875                           
   876                           ;tarti.c: 137: }
   877                           ;tarti.c: 139: if(timetick>=10000){
   878  00F5  083F               	movf	_timetick+3,w
   879  00F6  1D03               	btfss	3,2
   880  00F7  2905               	goto	i1l729
   881  00F8  083E               	movf	_timetick+2,w
   882  00F9  1D03               	btfss	3,2
   883  00FA  2905               	goto	i1l729
   884  00FB  3027               	movlw	39
   885  00FC  023D               	subwf	_timetick+1,w
   886  00FD  1D03               	skipz
   887  00FE  2903               	goto	u32_23
   888  00FF  3010               	movlw	16
   889  0100  023C               	subwf	_timetick,w
   890  0101  1D03               	skipz
   891  0102  2903               	goto	u32_23
   892  0103                     u32_23:	
   893  0103  1C03               	btfss	3,0
   894  0104  290D               	goto	i1l731
   895  0105                     i1l729:	
   896                           
   897                           ;tarti.c: 140: timetick=0;
   898  0105  3000               	movlw	0
   899  0106  00BF               	movwf	_timetick+3
   900  0107  3000               	movlw	0
   901  0108  00BE               	movwf	_timetick+2
   902  0109  3000               	movlw	0
   903  010A  00BD               	movwf	_timetick+1
   904  010B  3000               	movlw	0
   905  010C  00BC               	movwf	_timetick
   906  010D                     i1l731:	
   907                           
   908                           ;tarti.c: 141: }
   909                           ;tarti.c: 143: if(PIR1bits.RCIF){
   910  010D  1E8C               	btfss	12,5	;volatile
   911  010E  291D               	goto	i1l737
   912                           
   913                           ;tarti.c: 144: tarti.command[tarti.wr_index]=RCREG;
   914  010F  081A               	movf	26,w	;volatile
   915  0110  00F0               	movwf	??_kes
   916  0111  0838               	movf	_tarti+24,w
   917  0112  3E20               	addlw	(low (_tarti| 0))& (0+255)
   918  0113  0084               	movwf	4
   919  0114  0870               	movf	??_kes,w
   920  0115  1383               	bcf	3,7	;select IRP bank0
   921  0116  0080               	movwf	0
   922                           
   923                           ;tarti.c: 146: tarti.wr_index++;
   924  0117  3001               	movlw	1
   925  0118  07B8               	addwf	_tarti+24,f
   926  0119  1803               	skipnc
   927  011A  0AB9               	incf	_tarti+25,f
   928  011B  3000               	movlw	0
   929  011C  07B9               	addwf	_tarti+25,f
   930  011D                     i1l737:	
   931                           
   932                           ;tarti.c: 147: }
   933                           ;tarti.c: 149: if(tarti.wr_index>=24)
   934  011D  0839               	movf	_tarti+25,w
   935  011E  3A80               	xorlw	128
   936  011F  00FF               	movwf	127
   937  0120  3080               	movlw	128
   938  0121  027F               	subwf	127,w
   939  0122  1D03               	skipz
   940  0123  2926               	goto	u34_25
   941  0124  3018               	movlw	24
   942  0125  0238               	subwf	_tarti+24,w
   943  0126                     u34_25:	
   944  0126  1C03               	skipc
   945  0127  292C               	goto	i1l81
   946                           
   947                           ;tarti.c: 150: tarti.wr_index=0;
   948  0128  1283               	bcf	3,5	;RP0=0, select bank0
   949  0129  1303               	bcf	3,6	;RP1=0, select bank0
   950  012A  01B8               	clrf	_tarti+24
   951  012B  01B9               	clrf	_tarti+25
   952  012C                     i1l81:	
   953  012C  0874               	movf	??_kes+4,w
   954  012D  1283               	bcf	3,5	;RP0=0, select bank0
   955  012E  1303               	bcf	3,6	;RP1=0, select bank0
   956  012F  00FF               	movwf	127
   957  0130  0873               	movf	??_kes+3,w
   958  0131  008A               	movwf	10
   959  0132  0872               	movf	??_kes+2,w
   960  0133  0084               	movwf	4
   961  0134  0E71               	swapf	(??_kes+1)^(0+-128),w
   962  0135  0083               	movwf	3
   963  0136  0EFE               	swapf	126,f
   964  0137  0E7E               	swapf	126,w
   965  0138  0009               	retfie
   966  0139                     __end_of_kes:	
   967  007E                     btemp	set	126	;btemp
   968  007E                     wtemp0	set	126
   969                           
   970                           	psect	intentry
   971  0004                     __pintentry:	
   972                           ;incstack = 0
   973                           ; Regs used in _kes: [wreg-fsr0h+status,2+status,0+btemp+1]
   974                           
   975  0004                     interrupt_function:	
   976  007E                     saved_w	set	btemp
   977  0004  00FE               	movwf	btemp
   978  0005  0E03               	swapf	3,w
   979  0006  00F1               	movwf	??_kes+1
   980  0007  0804               	movf	4,w
   981  0008  00F2               	movwf	??_kes+2
   982  0009  080A               	movf	10,w
   983  000A  00F3               	movwf	??_kes+3
   984  000B  1283               	bcf	3,5	;RP0=0, select bank0
   985  000C  1303               	bcf	3,6	;RP1=0, select bank0
   986  000D  087F               	movf	btemp+1,w
   987  000E  00F4               	movwf	??_kes+4
   988  000F  28E3               	ljmp	_kes


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     10      42
    BANK1            80      0      48
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _kes in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Read_tarti

Critical Paths under _kes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _kes in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _kes in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     266
                                              5 COMMON     1     1      0
                                              8 BANK0      2     2      0
                         _Read_tarti
                            _T0_init
                        _serial_init
                         _tarti_init
 ---------------------------------------------------------------------------------
 (1) _tarti_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_tarti                                           8     8      0     167
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _kes                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_tarti
   _T0_init
   _serial_init
   _tarti_init

 _kes (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      30       7       60.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      2A       3       52.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      62      10        0.0%
ABS                  0      0      62       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jan 27 16:53:45 2018

            __CFG_CP$OFF 0000                       l50 009E                       l61 00DA  
                     l55 00B2                       l90 0032                       l58 00D2  
                     l92 0047                       l95 0058                       l87 0023  
                     l96 007F                       fsr 0004                      u405 007D  
                    u425 00B0             __CFG_CPD$OFF 0000                      u365 0030  
                    u445 00D0                      u375 0045                      u395 0056  
                    _kes 00E3                      fsr0 0004                      indf 0000  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     ?_kes 0070  
                   i1l81 012C          __end_of_T0_init 015B                     _main 008C  
                   btemp 007E                     start 0010                    ??_kes 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _CMCON 001F  
                  i1l731 010D                    i1l727 00F5                    i1l737 011D  
                  i1l729 0105                    _RCREG 001A                    u32_23 0103  
                  _SPBRG 0099                    u34_25 0126                    _TRISB 0086  
                  _TXREG 0019                    _tarti 0020                    main@k 0048  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 0011  
           __end_of_main 00E3               _Read_tarti 0020                   ??_main 0075  
            Read_tarti@i 0046                ??_T0_init 0075           __CFG_PWRTE$OFF 0000  
           ?_serial_init 0070             __pdataCOMMON 0076                   saved_w 007E  
__end_of__initialization 001E           __pcstackCOMMON 0070              ?_Read_tarti 0070  
         _OPTION_REGbits 0081               __pbssBANK0 0020               __pbssBANK1 00A0  
           Read_tarti@kl 0044               __pmaintext 008C               __pintentry 0004  
                _T0_init 014F      __size_of_Read_tarti 006C     __size_of_serial_init 0016  
                __ptext1 015B                  __ptext2 0139                  __ptext3 014F  
                __ptext4 0020                  __ptext5 00E3                  _counter 0076  
           __size_of_kes 0056                  clrloop0 0165     end_of_initialization 001E  
              _RCSTAbits 0018               _tarti_data 00A0               _tarti_init 015B  
              _PORTAbits 0005                _TRISAbits 0085                _TRISBbits 0086  
              _TXSTAbits 0098             ??_Read_tarti 0040            __pidataCOMMON 016C  
    start_initialization 0011              __end_of_kes 0139       __end_of_Read_tarti 008C  
            ?_tarti_init 0070                ___latbits 0000            __pcstackBANK0 0040  
               ?_T0_init 0070      __size_of_tarti_init 0009        interrupt_function 0004  
              clear_ram0 0164                 _PIE1bits 008C                 _PIR1bits 000C  
          ??_serial_init 0075         __size_of_T0_init 000C      __end_of_serial_init 014F  
          __size_of_main 0057             ??_tarti_init 0075                 _timetick 003C  
             _INTCONbits 000B                 intlevel1 0000       __end_of_tarti_init 0164  
            _serial_init 0139  
