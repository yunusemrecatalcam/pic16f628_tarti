

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jan 20 17:52:21 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F628A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0092                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009F                     	;# 
    88                           
    89                           	psect	nvCOMMON
    90  007B                     __pnvCOMMON:	
    91  007B                     _hell:	
    92  007B                     	ds	1
    93  0019                     _TXREG	set	25
    94  000C                     _PIR1bits	set	12
    95  0018                     _RCSTAbits	set	24
    96  000B                     _INTCONbits	set	11
    97  001A                     _RCREG	set	26
    98  0006                     _PORTBbits	set	6
    99  0099                     _SPBRG	set	153
   100  008C                     _PIE1bits	set	140
   101  0086                     _TRISBbits	set	134
   102  0098                     _TXSTAbits	set	152
   103  0081                     _OPTION_REGbits	set	129
   104  0085                     _TRISA	set	133
   105  0086                     _TRISB	set	134
   106                           
   107                           ; #config settings
   108  0000                     
   109                           	psect	cinit
   110  0011                     start_initialization:	
   111  0011                     __initialization:	
   112                           
   113                           ; Clear objects allocated to COMMON
   114  0011  3077               	movlw	low __pbssCOMMON
   115  0012  0084               	movwf	4
   116  0013  307B               	movlw	low (__pbssCOMMON+4)
   117  0014  20D4               	fcall	clear_ram0
   118                           
   119                           ; Clear objects allocated to BANK0
   120  0015  1383               	bcf	3,7	;select IRP bank0
   121  0016  3020               	movlw	low __pbssBANK0
   122  0017  0084               	movwf	4
   123  0018  303D               	movlw	low (__pbssBANK0+29)
   124  0019  20D4               	fcall	clear_ram0
   125  001A                     end_of_initialization:	
   126                           ;End of C runtime variable initialization code
   127                           
   128  001A                     __end_of__initialization:	
   129  001A  0183               	clrf	3
   130  001B  281C               	ljmp	_main	;jump to C main() function
   131                           
   132                           	psect	bssCOMMON
   133  0077                     __pbssCOMMON:	
   134  0077                     _timetick:	
   135  0077                     	ds	4
   136                           
   137                           	psect	bssBANK0
   138  0020                     __pbssBANK0:	
   139  0020                     _tarti:	
   140  0020                     	ds	29
   141                           
   142                           	psect	clrtext
   143  00D4                     clear_ram0:	
   144                           ;	Called with FSR containing the base address, and
   145                           ;	W with the last address+1
   146                           
   147  00D4  0064               	clrwdt	;clear the watchdog before getting into this loop
   148  00D5                     clrloop0:	
   149  00D5  0180               	clrf	0	;clear RAM location pointed to by FSR
   150  00D6  0A84               	incf	4,f	;increment pointer
   151  00D7  0604               	xorwf	4,w	;XOR with final address
   152  00D8  1903               	btfsc	3,2	;have we reached the end yet?
   153  00D9  3400               	retlw	0	;all done for this memory range, return
   154  00DA  0604               	xorwf	4,w	;XOR again to restore value
   155  00DB  28D5               	goto	clrloop0	;do the next byte
   156                           
   157                           	psect	cstackCOMMON
   158  0070                     __pcstackCOMMON:	
   159  0070                     ?_T0_init:	
   160  0070                     ?_serial_init:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  0070                     ?_main:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ?_kes:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     ??_kes:	
   170                           ; 1 bytes @ 0x0
   171                           
   172                           
   173                           ; 1 bytes @ 0x0
   174  0070                     	ds	5
   175  0075                     ??_T0_init:	
   176  0075                     ??_serial_init:	
   177                           ; 1 bytes @ 0x5
   178                           
   179  0075                     ??_main:	
   180                           ; 1 bytes @ 0x5
   181                           
   182                           
   183                           ; 1 bytes @ 0x5
   184  0075                     	ds	2
   185                           
   186                           	psect	maintext
   187  001C                     __pmaintext:	
   188 ;;
   189 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   190 ;;
   191 ;; *************** function _main *****************
   192 ;; Defined at:
   193 ;;		line 30 in file "tarti.c"
   194 ;; Parameters:    Size  Location     Type
   195 ;;		None
   196 ;; Auto vars:     Size  Location     Type
   197 ;;		None
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   202 ;; Tracked objects:
   203 ;;		On entry : B00/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   207 ;;      Params:         0       0       0       0
   208 ;;      Locals:         0       0       0       0
   209 ;;      Temps:          2       0       0       0
   210 ;;      Totals:         2       0       0       0
   211 ;;Total ram usage:        2 bytes
   212 ;; Hardware stack levels required when called:    2
   213 ;; This function calls:
   214 ;;		_T0_init
   215 ;;		_serial_init
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           
   222                           ;psect for function _main
   223  001C                     _main:	
   224                           
   225                           ;tarti.c: 31: TRISB=0b00000110;
   226                           
   227                           ;incstack = 0
   228                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   229  001C  3006               	movlw	6
   230  001D  1683               	bsf	3,5	;RP0=1, select bank1
   231  001E  1303               	bcf	3,6	;RP1=0, select bank1
   232  001F  0086               	movwf	6	;volatile
   233                           
   234                           ;tarti.c: 32: TRISA=0x00;
   235  0020  0185               	clrf	5	;volatile
   236                           
   237                           ;tarti.c: 33: T0_init();
   238  0021  20C8               	fcall	_T0_init
   239                           
   240                           ;tarti.c: 34: serial_init();
   241  0022  20B5               	fcall	_serial_init
   242                           
   243                           ;tarti.c: 36: tarti.wr_index=0;
   244  0023  1283               	bcf	3,5	;RP0=0, select bank0
   245  0024  1303               	bcf	3,6	;RP1=0, select bank0
   246  0025  01B9               	clrf	_tarti+25
   247  0026  01BA               	clrf	_tarti+26
   248                           
   249                           ;tarti.c: 37: tarti.rd_index=0;
   250  0027  01BB               	clrf	_tarti+27
   251  0028  01BC               	clrf	_tarti+28
   252                           
   253                           ;tarti.c: 39: PORTBbits.RB7 =1;
   254  0029  1786               	bsf	6,7	;volatile
   255                           
   256                           ;tarti.c: 41: hell=RCREG;
   257  002A  081A               	movf	26,w	;volatile
   258  002B  00F5               	movwf	??_main
   259  002C  0875               	movf	??_main,w
   260  002D  00FB               	movwf	_hell
   261  002E                     l542:	
   262                           ;tarti.c: 43: while (1) {
   263                           
   264                           
   265                           ;tarti.c: 44: if(timetick>=10000){
   266  002E  087A               	movf	_timetick+3,w
   267  002F  1D03               	btfss	3,2
   268  0030  283E               	goto	l544
   269  0031  0879               	movf	_timetick+2,w
   270  0032  1D03               	btfss	3,2
   271  0033  283E               	goto	l544
   272  0034  3027               	movlw	39
   273  0035  0278               	subwf	_timetick+1,w
   274  0036  1D03               	skipz
   275  0037  283C               	goto	u13
   276  0038  3010               	movlw	16
   277  0039  0277               	subwf	_timetick,w
   278  003A  1D03               	skipz
   279  003B  283C               	goto	u13
   280  003C                     u13:	
   281  003C  1C03               	btfss	3,0
   282  003D  2846               	goto	l546
   283  003E                     l544:	
   284                           
   285                           ;tarti.c: 46: timetick=0;
   286  003E  3000               	movlw	0
   287  003F  00FA               	movwf	_timetick+3
   288  0040  3000               	movlw	0
   289  0041  00F9               	movwf	_timetick+2
   290  0042  3000               	movlw	0
   291  0043  00F8               	movwf	_timetick+1
   292  0044  3000               	movlw	0
   293  0045  00F7               	movwf	_timetick
   294  0046                     l546:	
   295                           
   296                           ;tarti.c: 49: }
   297                           ;tarti.c: 62: if(tarti.rd_index>=24)
   298  0046  083C               	movf	_tarti+28,w
   299  0047  3A80               	xorlw	128
   300  0048  00FF               	movwf	127
   301  0049  3080               	movlw	128
   302  004A  027F               	subwf	127,w
   303  004B  1D03               	skipz
   304  004C  284F               	goto	u25
   305  004D  3018               	movlw	24
   306  004E  023B               	subwf	_tarti+27,w
   307  004F                     u25:	
   308  004F  1C03               	skipc
   309  0050  2855               	goto	l550
   310                           
   311                           ;tarti.c: 63: tarti.rd_index=0;
   312  0051  1283               	bcf	3,5	;RP0=0, select bank0
   313  0052  1303               	bcf	3,6	;RP1=0, select bank0
   314  0053  01BB               	clrf	_tarti+27
   315  0054  01BC               	clrf	_tarti+28
   316  0055                     l550:	
   317                           
   318                           ;tarti.c: 65: if(tarti.wr_index>=24)
   319  0055  1283               	bcf	3,5	;RP0=0, select bank0
   320  0056  1303               	bcf	3,6	;RP1=0, select bank0
   321  0057  083A               	movf	_tarti+26,w
   322  0058  3A80               	xorlw	128
   323  0059  00FF               	movwf	127
   324  005A  3080               	movlw	128
   325  005B  027F               	subwf	127,w
   326  005C  1D03               	skipz
   327  005D  2860               	goto	u35
   328  005E  3018               	movlw	24
   329  005F  0239               	subwf	_tarti+25,w
   330  0060                     u35:	
   331  0060  1C03               	skipc
   332  0061  2866               	goto	l554
   333                           
   334                           ;tarti.c: 66: tarti.wr_index=0;
   335  0062  1283               	bcf	3,5	;RP0=0, select bank0
   336  0063  1303               	bcf	3,6	;RP1=0, select bank0
   337  0064  01B9               	clrf	_tarti+25
   338  0065  01BA               	clrf	_tarti+26
   339  0066                     l554:	
   340                           
   341                           ;tarti.c: 68: if(tarti.wr_index%4==0)
   342  0066  3003               	movlw	3
   343  0067  1283               	bcf	3,5	;RP0=0, select bank0
   344  0068  1303               	bcf	3,6	;RP1=0, select bank0
   345  0069  0539               	andwf	_tarti+25,w
   346  006A  00F5               	movwf	??_main
   347  006B  3000               	movlw	0
   348  006C  053A               	andwf	_tarti+26,w
   349  006D  00F6               	movwf	??_main+1
   350  006E  0875               	movf	??_main,w
   351  006F  0476               	iorwf	??_main+1,w
   352  0070  1D03               	btfss	3,2
   353  0071  282E               	goto	l542
   354                           
   355                           ;tarti.c: 69: PORTBbits.RB7 ^=1;
   356  0072  0D06               	rlf	6,w	;volatile
   357  0073  0D06               	rlf	6,w	;volatile
   358  0074  3901               	andlw	1
   359  0075  00F5               	movwf	??_main
   360  0076  3001               	movlw	1
   361  0077  06F5               	xorwf	??_main,f
   362  0078  0CF5               	rrf	??_main,f
   363  0079  0CF5               	rrf	??_main,f
   364  007A  0806               	movf	6,w	;volatile
   365  007B  0675               	xorwf	??_main,w
   366  007C  397F               	andlw	-129
   367  007D  0675               	xorwf	??_main,w
   368  007E  0086               	movwf	6	;volatile
   369  007F  282E               	goto	l542
   370  0080                     __end_of_main:	
   371                           ;tarti.c: 71: }
   372                           ;tarti.c: 75: return;
   373                           
   374                           
   375                           	psect	text1
   376  00B5                     __ptext1:	
   377 ;; *************** function _serial_init *****************
   378 ;; Defined at:
   379 ;;		line 92 in file "tarti.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   393 ;;      Params:         0       0       0       0
   394 ;;      Locals:         0       0       0       0
   395 ;;      Temps:          0       0       0       0
   396 ;;      Totals:         0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; Hardware stack levels required when called:    1
   400 ;; This function calls:
   401 ;;		Nothing
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           
   408                           ;psect for function _serial_init
   409  00B5                     _serial_init:	
   410                           
   411                           ;tarti.c: 93: TXSTAbits.TX9=0;
   412                           
   413                           ;incstack = 0
   414                           ; Regs used in _serial_init: [wreg]
   415  00B5  1683               	bsf	3,5	;RP0=1, select bank1
   416  00B6  1303               	bcf	3,6	;RP1=0, select bank1
   417  00B7  1318               	bcf	24,6	;volatile
   418                           
   419                           ;tarti.c: 94: TXSTAbits.TXEN=1;
   420  00B8  1698               	bsf	24,5	;volatile
   421                           
   422                           ;tarti.c: 95: TXSTAbits.SYNC=0;
   423  00B9  1218               	bcf	24,4	;volatile
   424                           
   425                           ;tarti.c: 96: TXSTAbits.BRGH=1;
   426  00BA  1518               	bsf	24,2	;volatile
   427                           
   428                           ;tarti.c: 98: RCSTAbits.SPEN=1;
   429  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   430  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   431  00BD  1798               	bsf	24,7	;volatile
   432                           
   433                           ;tarti.c: 99: RCSTAbits.RX9=0;
   434  00BE  1318               	bcf	24,6	;volatile
   435                           
   436                           ;tarti.c: 100: RCSTAbits.CREN=1;
   437  00BF  1618               	bsf	24,4	;volatile
   438                           
   439                           ;tarti.c: 102: TRISBbits.TRISB1=1;
   440  00C0  1683               	bsf	3,5	;RP0=1, select bank1
   441  00C1  1303               	bcf	3,6	;RP1=0, select bank1
   442  00C2  1486               	bsf	6,1	;volatile
   443                           
   444                           ;tarti.c: 103: TRISBbits.TRISB2=1;
   445  00C3  1506               	bsf	6,2	;volatile
   446                           
   447                           ;tarti.c: 105: PIE1bits.RCIE=1;
   448  00C4  168C               	bsf	12,5	;volatile
   449                           
   450                           ;tarti.c: 106: SPBRG=129;
   451  00C5  3081               	movlw	129
   452  00C6  0099               	movwf	25	;volatile
   453  00C7  0008               	return
   454  00C8                     __end_of_serial_init:	
   455                           
   456                           	psect	text2
   457  00C8                     __ptext2:	
   458 ;; *************** function _T0_init *****************
   459 ;; Defined at:
   460 ;;		line 78 in file "tarti.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		None
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   474 ;;      Params:         0       0       0       0
   475 ;;      Locals:         0       0       0       0
   476 ;;      Temps:          0       0       0       0
   477 ;;      Totals:         0       0       0       0
   478 ;;Total ram usage:        0 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    1
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           
   489                           ;psect for function _T0_init
   490  00C8                     _T0_init:	
   491                           
   492                           ;tarti.c: 79: INTCONbits.GIE=1;
   493                           
   494                           ;incstack = 0
   495                           ; Regs used in _T0_init: []
   496  00C8  178B               	bsf	11,7	;volatile
   497                           
   498                           ;tarti.c: 80: INTCONbits.T0IE=1;
   499  00C9  168B               	bsf	11,5	;volatile
   500                           
   501                           ;tarti.c: 81: INTCONbits.T0IF=0;
   502  00CA  110B               	bcf	11,2	;volatile
   503                           
   504                           ;tarti.c: 83: OPTION_REGbits.T0CS=0;
   505  00CB  1683               	bsf	3,5	;RP0=1, select bank1
   506  00CC  1303               	bcf	3,6	;RP1=0, select bank1
   507  00CD  1281               	bcf	1,5	;volatile
   508                           
   509                           ;tarti.c: 84: OPTION_REGbits.T0SE=0;
   510  00CE  1201               	bcf	1,4	;volatile
   511                           
   512                           ;tarti.c: 85: OPTION_REGbits.PSA=0;
   513  00CF  1181               	bcf	1,3	;volatile
   514                           
   515                           ;tarti.c: 86: OPTION_REGbits.PS0=0;
   516  00D0  1001               	bcf	1,0	;volatile
   517                           
   518                           ;tarti.c: 87: OPTION_REGbits.PS1=0;
   519  00D1  1081               	bcf	1,1	;volatile
   520                           
   521                           ;tarti.c: 88: OPTION_REGbits.PS2=0;
   522  00D2  1101               	bcf	1,2	;volatile
   523  00D3  0008               	return
   524  00D4                     __end_of_T0_init:	
   525                           
   526                           	psect	text3
   527  0080                     __ptext3:	
   528 ;; *************** function _kes *****************
   529 ;; Defined at:
   530 ;;		line 109 in file "tarti.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   544 ;;      Params:         0       0       0       0
   545 ;;      Locals:         0       0       0       0
   546 ;;      Temps:          5       0       0       0
   547 ;;      Totals:         5       0       0       0
   548 ;;Total ram usage:        5 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		Interrupt level 1
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _kes
   559  0080                     _kes:	
   560                           
   561                           ;tarti.c: 110: if(INTCONbits.T0IF && INTCONbits.T0IE){
   562  0080  190B               	btfsc	11,2	;volatile
   563  0081  1E8B               	btfss	11,5	;volatile
   564  0082  2892               	goto	i1l566
   565                           
   566                           ;tarti.c: 111: timetick++;
   567  0083  3001               	movlw	1
   568  0084  07F7               	addwf	_timetick,f
   569  0085  3000               	movlw	0
   570  0086  1803               	skipnc
   571  0087  3001               	movlw	1
   572  0088  07F8               	addwf	_timetick+1,f
   573  0089  3000               	movlw	0
   574  008A  1803               	skipnc
   575  008B  3001               	movlw	1
   576  008C  07F9               	addwf	_timetick+2,f
   577  008D  3000               	movlw	0
   578  008E  1803               	skipnc
   579  008F  3001               	movlw	1
   580  0090  07FA               	addwf	_timetick+3,f
   581                           
   582                           ;tarti.c: 112: INTCONbits.T0IF=0;
   583  0091  110B               	bcf	11,2	;volatile
   584  0092                     i1l566:	
   585                           
   586                           ;tarti.c: 114: }
   587                           ;tarti.c: 116: if(PIR1bits.RCIF){
   588  0092  1E8C               	btfss	12,5	;volatile
   589  0093  28AA               	goto	i1l64
   590                           
   591                           ;tarti.c: 117: tarti.command[tarti.wr_index]=RCREG;
   592  0094  081A               	movf	26,w	;volatile
   593  0095  00F0               	movwf	??_kes
   594  0096  0839               	movf	_tarti+25,w
   595  0097  3E20               	addlw	(low (_tarti| 0))& (0+255)
   596  0098  0084               	movwf	4
   597  0099  0870               	movf	??_kes,w
   598  009A  1383               	bcf	3,7	;select IRP bank0
   599  009B  0080               	movwf	0
   600  009C                     i1l61:	
   601                           ;tarti.c: 118: while(!TXSTAbits.TRMT);
   602                           
   603  009C  1683               	bsf	3,5	;RP0=1, select bank1
   604  009D  1303               	bcf	3,6	;RP1=0, select bank1
   605  009E  1C98               	btfss	24,1	;volatile
   606  009F  289C               	goto	i1l61
   607                           
   608                           ;tarti.c: 119: TXREG='F';
   609  00A0  3046               	movlw	70
   610  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   611  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   612  00A3  0099               	movwf	25	;volatile
   613                           
   614                           ;tarti.c: 120: tarti.wr_index++;
   615  00A4  3001               	movlw	1
   616  00A5  07B9               	addwf	_tarti+25,f
   617  00A6  1803               	skipnc
   618  00A7  0ABA               	incf	_tarti+26,f
   619  00A8  3000               	movlw	0
   620  00A9  07BA               	addwf	_tarti+26,f
   621  00AA                     i1l64:	
   622  00AA  0874               	movf	??_kes+4,w
   623  00AB  00FF               	movwf	127
   624  00AC  0873               	movf	??_kes+3,w
   625  00AD  008A               	movwf	10
   626  00AE  0872               	movf	??_kes+2,w
   627  00AF  0084               	movwf	4
   628  00B0  0E71               	swapf	(??_kes+1)^(0+-128),w
   629  00B1  0083               	movwf	3
   630  00B2  0EFE               	swapf	126,f
   631  00B3  0E7E               	swapf	126,w
   632  00B4  0009               	retfie
   633  00B5                     __end_of_kes:	
   634  007E                     btemp	set	126	;btemp
   635  007E                     wtemp0	set	126
   636                           
   637                           	psect	intentry
   638  0004                     __pintentry:	
   639                           ;incstack = 0
   640                           ; Regs used in _kes: [wreg-fsr0h+status,2+status,0]
   641                           
   642  0004                     interrupt_function:	
   643  007E                     saved_w	set	btemp
   644  0004  00FE               	movwf	btemp
   645  0005  0E03               	swapf	3,w
   646  0006  00F1               	movwf	??_kes+1
   647  0007  0804               	movf	4,w
   648  0008  00F2               	movwf	??_kes+2
   649  0009  080A               	movf	10,w
   650  000A  00F3               	movwf	??_kes+3
   651  000B  1283               	bcf	3,5	;RP0=0, select bank0
   652  000C  1303               	bcf	3,6	;RP1=0, select bank0
   653  000D  087F               	movf	btemp+1,w
   654  000E  00F4               	movwf	??_kes+4
   655  000F  2880               	ljmp	_kes


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      0      29
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _kes in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _kes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _kes in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _kes in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              5 COMMON     2     2      0
                            _T0_init
                        _serial_init
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _kes                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _T0_init
   _serial_init

 _kes (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0      1D       3       36.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      29       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      29      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jan 20 17:52:21 2018

            __CFG_CP$OFF 0000                       u13 003C                       u25 004F  
                     u35 0060                       fsr 0004                      l550 0055  
                    l542 002E                      l544 003E                      l554 0066  
                    l546 0046             __CFG_CPD$OFF 0000                      _kes 0080  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     ?_kes 0070                     i1l61 009C  
                   i1l64 00AA          __end_of_T0_init 00D4                     _hell 007B  
                   _main 001C                     btemp 007E                     start 0010  
                  ??_kes 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  i1l566 0092                    _RCREG 001A                    _SPBRG 0099  
                  _TRISA 0085                    _TRISB 0086                    _TXREG 0019  
                  _tarti 0020           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 0011             __end_of_main 0080                   ??_main 0075  
              ??_T0_init 0075           __CFG_PWRTE$OFF 0000             ?_serial_init 0070  
                 saved_w 007E  __end_of__initialization 001A           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081               __pbssBANK0 0020               __pnvCOMMON 007B  
             __pmaintext 001C               __pintentry 0004                  _T0_init 00C8  
   __size_of_serial_init 0013                  __ptext1 00B5                  __ptext2 00C8  
                __ptext3 0080             __size_of_kes 0035                  clrloop0 00D5  
   end_of_initialization 001A                _RCSTAbits 0018                _PORTBbits 0006  
              _TRISBbits 0086                _TXSTAbits 0098      start_initialization 0011  
            __end_of_kes 00B5              __pbssCOMMON 0077                ___latbits 0000  
               ?_T0_init 0070        interrupt_function 0004                clear_ram0 00D4  
               _PIE1bits 008C                 _PIR1bits 000C            ??_serial_init 0075  
       __size_of_T0_init 000C      __end_of_serial_init 00C8            __size_of_main 0064  
               _timetick 0077               _INTCONbits 000B                 intlevel1 0000  
            _serial_init 00B5  
